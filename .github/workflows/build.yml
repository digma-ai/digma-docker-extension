name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  install:
    name: Test installation
    runs-on: ubuntu-latest-m

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Desktop
        id: start_desktop
        uses: docker/desktop-action/start@v0.3.6

      - name: Locate and Print All Docker Settings Files
        shell: bash
        run: |
          echo "Searching for all Docker settings.json files..."
          find $HOME ~/.docker /etc /var/lib ~/Library ~/AppData -name "settings.json" -type f 2>/dev/null | while read settings_file; do
            echo "Found settings file: $settings_file"
            cat "$settings_file"
            echo "----------------------------------------"
          done

      - name: Print Docker Desktop settings file before update
        shell: bash
        run: |
          cat ~/.docker/desktop/settings.json

      - name: Edit Docker Desktop setting file
        shell: bash
        run: |
          jq '.onlyMarketplaceExtensions = false' ~/.docker/desktop/settings.json > tmp.$$.json && mv tmp.$$.json ~/.docker/desktop/settings.json

      - name: Print Docker Desktop settings file after update
        shell: bash
        run: |
          cat ~/.docker/desktop/settings.json
          
      - name: Restart Docker Daemon to Apply Settings
        shell: bash
        run: |
          sudo systemctl daemon-reload
          sudo systemctl restart docker
          
      - name: Verify settings after restart
        shell: bash
        run: |
          SETTINGS_FILE="$HOME/.docker/desktop/settings.json"
          cat "$SETTINGS_FILE" | grep '"onlyMarketplaceExtensions": false'
          if [ $? -eq 0 ]; then
            echo "Settings are correctly applied."
          else
            echo "Settings were not applied correctly."
            exit 1
          fi

      - name: Validate metadata
        run: docker extension validate ./metadata.json

      - name: Build extension
        run: docker build -t digma-docker-extension .

      - name: Install extension
        run: docker extension install digma-docker-extension -f

  build:
    name: Build
    needs: [install]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
